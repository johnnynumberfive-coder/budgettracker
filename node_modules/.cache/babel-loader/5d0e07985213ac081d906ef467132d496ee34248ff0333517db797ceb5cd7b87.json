{"ast":null,"code":"var _jsxFileName = \"/home/johnn/budget-tracker/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// 5. The reduceer - this is used to update the state, based on the action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return {\n        ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n    case 'DELETE_EXPENSE':\n      return {\n        ...state,\n        expenses: state.expenses.filter(expense => expense.id !== action.payload)\n      };\n    case 'SET_BUDGET':\n      return {\n        ...state,\n        budget: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// 1. Sets the initial state when the app loads\n_c = AppReducer;\nconst initialState = {\n  budget: 2000,\n  expenses: []\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = /*#__PURE__*/createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = props => {\n  _s();\n  // 4. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // 5. Returns our context. Pass in the values we want to expose\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      budget: state.budget,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = AppProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","v4","uuidv4","jsxDEV","_jsxDEV","AppReducer","state","action","type","expenses","payload","filter","expense","id","budget","_c","initialState","AppContext","AppProvider","props","_s","dispatch","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/johnn/budget-tracker/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// 5. The reduceer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: [...state.expenses, action.payload],\n\t\t\t};\n\t\tcase 'DELETE_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: state.expenses.filter(\n\t\t\t\t\t(expense) => expense.id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'SET_BUDGET':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbudget: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// 1. Sets the initial state when the app loads\nconst initialState = {\n\tbudget: 2000,\n\texpenses: [],\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n\t// 4. Sets up the app state. takes a reducer, and an initial state\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\n\n\t// 5. Returns our context. Pass in the values we want to expose\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\texpenses: state.expenses,\n\t\t\t\tbudget: state.budget,\n\t\t\t\tdispatch,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</AppContext.Provider>\n\t);\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAK,aAAa;MACjB,OAAO;QACN,GAAGF,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAC7C,CAAC;IACF,KAAK,gBAAgB;MACpB,OAAO;QACN,GAAGJ,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACE,MAAM,CAC7BC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACG,OACpC;MACD,CAAC;IACF,KAAK,YAAY;MAChB,OAAO;QACN,GAAGJ,KAAK;QACRQ,MAAM,EAAEP,MAAM,CAACG;MAChB,CAAC;IAEF;MACC,OAAOJ,KAAK;EACd;AACD,CAAC;;AAED;AAAAS,EAAA,GAzBaV,UAAU;AA0BvB,MAAMW,YAAY,GAAG;EACpBF,MAAM,EAAE,IAAI;EACZL,QAAQ,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,gBAAGlB,aAAa,CAAC,CAAC;;AAEzC;AACA;AACA,OAAO,MAAMmB,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC;EACA,MAAM,CAACd,KAAK,EAAEe,QAAQ,CAAC,GAAGrB,UAAU,CAACK,UAAU,EAAEW,YAAY,CAAC;;EAE9D;EACA,oBACCZ,OAAA,CAACa,UAAU,CAACK,QAAQ;IACnBC,KAAK,EAAE;MACNd,QAAQ,EAAEH,KAAK,CAACG,QAAQ;MACxBK,MAAM,EAAER,KAAK,CAACQ,MAAM;MACpBO;IACD,CAAE;IAAAG,QAAA,EAEDL,KAAK,CAACK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAExB,CAAC;AAACR,EAAA,CAhBWF,WAAW;AAAAW,GAAA,GAAXX,WAAW;AAAA,IAAAH,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}